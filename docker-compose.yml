services:
  db:
    image: postgis/postgis:latest
    container_name: postgis_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
  
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    container_name: django_web
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    restart: unless-stopped
    ports:
      - 1883:1883
      - 8080:8080
    volumes:
      - mqtt_data:/mosquitto/data
      - mqtt_log:/mosquitto/log
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
  
  mqtt-listener:
    build: .
    command: python manage.py mqtt_listener
    container_name: mqtt_listener
    volumes:
      - .:/app
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      MQTT_BROKER_HOST: ${MQTT_BROKER_HOST}
      MQTT_BROKER_PORT: ${MQTT_BROKER_PORT}
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      mosquitto:
        condition: service_started
    restart: unless-stopped

volumes:
  db_data:
  mqtt_data:
  mqtt_log:
